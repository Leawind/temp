plugins {
  id 'com.github.johnrengelman.shadow'
}

base {
  archivesName = mod_id
  version = getArchiveVersion("neoforge")
}

architectury {
  platformSetupLoomIde()
  neoForge()
}

configurations {
  common {
    canBeResolved = true
    canBeConsumed = false
  }
  compileClasspath.extendsFrom common
  runtimeClasspath.extendsFrom common
  developmentNeoForge.extendsFrom common

  shadowBundle {
    canBeResolved = true
    canBeConsumed = false
  }
}

repositories {
  maven {
    name = 'NeoForged'
    url = 'https://maven.neoforged.net/releases'
  }
}

dependencies {
  neoForge "net.neoforged:neoforge:${neoforge_version}"

  common(project(path: ':common', configuration: 'namedElements')) { transitive false }
  shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')

  // MixinExtras
  include implementation(annotationProcessor("io.github.llamalad7:mixinextras-neoforge:${mixinextras_version}"))
}

shadowJar {
  configurations = [project.configurations.shadowBundle]
  archiveClassifier = 'dev-shadow'
}

remapJar {
  inputFile.set shadowJar.archiveFile
}
