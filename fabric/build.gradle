plugins {
  id 'com.github.johnrengelman.shadow'
}

base {
  archivesName = mod_id
  version = getArchiveVersion("fabric")
}

architectury {
  platformSetupLoomIde()
  fabric()
}

configurations {
  common {
    canBeResolved = true
    canBeConsumed = false
  }
  compileClasspath.extendsFrom common
  runtimeClasspath.extendsFrom common
  developmentFabric.extendsFrom common

  shadowBundle {
    canBeResolved = true
    canBeConsumed = false
  }
}

repositories {
  // Mod Menu
  maven { url "https://maven.terraformersmc.com/releases" }
}

dependencies {
  common(project(path: ':common', configuration: 'namedElements')) { transitive false }
  shadowBundle project(path: ':common', configuration: 'transformProductionFabric')

  modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
  modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

  // MixinExtras
  include implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${mixinextras_version}"))

  // ModMenu
  modImplementation "com.terraformersmc:modmenu:${modmenu_version}"
}

shadowJar {
  configurations = [project.configurations.shadowBundle]
  archiveClassifier = "dev-shadow"
}

remapJar {
  inputFile.set shadowJar.archiveFile
}
